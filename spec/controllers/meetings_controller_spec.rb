require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe MeetingsController, type: :controller do

  # This should return the minimal set of attributes required to create a valid
  # Meeting. As you add validations to Meeting, be sure to
  # adjust the attributes here as well.
  describe 'List All meetings' do
        fixtures :meetings
        fixtures :interests
        it 'should render the index view' do
            get :index
            expect(response).to render_template("index")
        end
  end
  
  describe 'Add new meetings' do
        fixtures :meetings
        fixtures :interests
        it 'should render the new meetings view' do
            get :new
            expect(response).to render_template("new")
        end
        
        it 'should render calendar after create' do
            
          post :create, params: {"meeting" => {"name"=>"Potter Fans of Iowa", "start_time(1i)"=>"2016", "start_time(2i)"=>"11", "start_time(3i)"=>"26", "approx_time"=>"Around 5"}, "selected_groups"=>{"1"=>"1", "2"=>"1", "3"=>"1"} }
          expect(flash[:notice]).to eq("Meeting was added to the Calendar")
          expect(response).to redirect_to(view_calendar_path)
        end
        
        it 'should fail if no associations' do
          post :create, params: {"meeting" => {"name"=>"Potter Fans of Iowa", "start_time(1i)"=>"2016", "start_time(2i)"=>"11", "start_time(3i)"=>"26", "approx_time"=>"Around 5"}, "selected_groups"=>{} }
          expect(flash[:notice]).to eq("No Interest Groups Were Selected")
          expect(response).to redirect_to(view_calendar_path)
        end
  end
  describe 'Add new meetings' do
        fixtures :meetings
        fixtures :interests
        
        it 'should delet the meeting passed in params' do
            
          post :create, params: 
          expect(flash[:notice]).to eq("Meeting was added to the Calendar")
          expect(response).to redirect_to(view_calendar_path)
        end
        
  end
end
